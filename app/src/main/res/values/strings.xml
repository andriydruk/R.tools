<!--
  ~ Copyright (C) 2015 Andriy Druk
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  v See the License for the specific language governing permissions and
  ~ limitations under the License.
-->
<resources><string name="app_name">R.tools</string>
    <string name="no_item">No qualifiers are selected</string>

    <string-array name="qualifiers">
        <item>@string/mcc</item>
        <item>@string/mnc</item>
        <item>@string/locale</item>
        <item>@string/ld</item>
        <item>@string/sw</item>
        <item>@string/aw</item>
        <item>@string/ah</item>
        <item>@string/size</item>
        <item>@string/aspect</item>
        <item>@string/orientation</item>
        <item>@string/ui_mode</item>
        <item>@string/night_mode</item>
        <item>@string/dpi</item>
        <item>@string/touchscreen_type</item>
        <item>@string/keyboard</item>
        <item>@string/text_input</item>
        <item>@string/navigation</item>
        <item>@string/non_touch_navigation</item>
        <item>@string/api_level</item>
    </string-array>

    <string name="mcc">MCC</string>
    <string name="mnc">MNC</string>
    <string name="locale">Language and region</string>
    <string name="ld">Layout Direction</string>
    <string name="sw">smallestWidth</string>
    <string name="aw">Available width</string>
    <string name="ah">Available height</string>
    <string name="size">Screen size</string>
    <string name="aspect">Screen aspect</string>
    <string name="orientation">Screen orientation</string>
    <string name="ui_mode">UI mode</string>
    <string name="night_mode">Night mode</string>
    <string name="dpi">Screen pixel density (dpi)</string>
    <string name="touchscreen_type">Touchscreen type</string>
    <string name="keyboard">Keyboard availability</string>
    <string name="text_input">Primary text input method</string>
    <string name="navigation">Navigation key availability</string>
    <string name="non_touch_navigation">Primary non-touch navigation method</string>
    <string name="api_level">Platform Version (API level)</string>
    <string name="qualifiers">qualifiers</string>
    <string name="copy_toast_message">Qualifiers was copied to your clipboard</string>

    <string name="undefined">undefined</string>
    <string name="keyboard_available">undefined</string>
    <string name="title_qualifier_list">Qualifiers</string>
    <string name="title_qualifier_detail">Qualifier Detail</string>

    <!-- License strings -->
    <string name="licences">Open-source licences</string>
    <string name="cannot_open_link">Cannot open link</string>




    <string name="mcc_description">
    \tThe mobile country code (MCC), optionally followed by mobile network code (MNC) from the SIM card in the device. For example, <b>mcc310</b>
        is U.S. on any carrier, <b>mcc310-mnc004</b> is U.S. on Verizon, and <b>mcc208-mnc00</b> is France on Orange.\n
    \tIf the device uses a radio connection (GSM phone), the MCC and MNC values come from the SIM card. You can also use the MCC alone (for example,
        to include country-specific legal resources in your application). If you need to specify based on the language only, then use the <i>language
        and region</i> qualifier instead (discussed next). If you decide to use the MCC and MNC qualifier, you should do so with care and test that
        it works as expected.\n
    \tAlso see the configuration fields <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#mcc">mcc</a></b>, and <b>
        <a href="http://developer.android.com/reference/android/content/res/Configuration.html#mnc">mnc</a></b>, which indicate the current mobile country code and
        mobile network code, respectively.
    </string>

    <string name="locale_description">
    \tThe language is defined by a two-letter <a href="http://www.loc.gov/standards/iso639-2/php/code_list.php">ISO 639-1</a> language code,
        optionally followed by a two letter <a href="http://www.iso.org/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html">ISO
        3166-1-alpha-2</a> region code (preceded by lowercase r).\n
    \tThe codes are <i>not</i> case-sensitive; the <b>r</b> prefix is used to distinguish the region portion. You cannot specify a region alone.\n
    \tSee <a href="localization.html">Localization</a> for a complete guide to localizing your application for other languages.\n
    \tAlso see the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#locale">locale</a></b> configuration field, which
        indicates the current locale.
    </string>

    <string name="ld_description">
    \tThe layout direction of your application. <b>ldrtl</b> means "layout-direction-right-to-left". <b>ldltr</b> means "layout-direction-
        left-to-right" and is the default implicit value.\t
    \tThis can apply to any resource such as layouts, drawables, or values.\n
    \tFor example, if you want to provide some specific layout for the Arabic language and some generic layout for any other "right-to-left" language
        (like Persian or Hebrew) then you would have:\n
    \tres/\n
    \t\t\tlayout/\n
    \t\t\t\t\t\tmain.xml\n
    \t\t\tlayout-ar/\n
    \t\t\t\t\t\tmain.xml  (Specific layout for Arabic)\n
    \t\t\tlayout-ldrtl/\n
    \t\t\t\t\t\tmain.xml  (Any "right-to-left" language, except for Arabic, because the "ar" language qualifierhas a higher precedence.)
    </string>

    <string name="sw_description">
    \tThe fundamental size of a screen, as indicated by the shortest dimension of the available screen area. Specifically, the device\'s smallestWidth
        is the shortest of the screen\'s available height and width (you may also think of it as the "smallest possible width" for the screen). You
        can use this qualifier to ensure that, regardless of the screen\'s current orientation, your application has at least N dps of width available
        for its UI.\n
    \tFor example, if your layout requires that its smallest dimension of screen area be at least 600 dp at all times, then you can use this qualifer
        to create the layout resources, <b>res/layout-sw600dp/</b>. The system will use these resources only when the smallest dimension of
        available screen is at least 600dp, regardless of whether the 600dp side is the user-perceived height or width. The smallestWidth is a fixed
        screen size characteristic of the device; <b>the device\'s smallestWidth does not change when the screen\'s orientation changes</b>.\n
    \tThe smallestWidth of a device takes into account screen decorations and system UI. For example, if the device has some persistent UI elements
        on the screen that account for space along the axis of the smallestWidth, the system declares the smallestWidth to be smaller than the actual
        screen size, because those are screen pixels not available for your UI. Thus, the value you use should be the actual smallest dimension
        <i>required by your layout</i> (usually, this value is the "smallest width" that your layout supports, regardless of the screen\'s current
        orientation).\n
    \tSome values you might use here for common screen sizes:\n
    \t\t\t320, for devices with screen configurations such as:\n
    \t\t\t\t\t\t240x320 ldpi (QVGA handset)\n
    \t\t\t\t\t\t320x480 mdpi (handset)\n
    \t\t\t\t\t\t480x800 hdpi (high-density handset)\n
    \t\t\t480, for screens such as 480x800 mdpi (tablet/handset).\n
    \t\t\t600, for screens such as 600x1024 mdpi (7" tablet).\n\t\t720, for screens such as 720x1280 mdpi (10" tablet).\n
    \tWhen your application provides multiple resource directories with different values for the smallestWidth qualifier, the system uses the one closest to (without exceeding) the device\'s smallestWidth.\n
    \tAlso see the <a href="http://developer.android.com/guide/topics/manifest/supports-screens-element.html#requiresSmallest"><b>android:requiresSmallestWidthDp</b></a> attribute, which declares the minimum smallestWidth with which your application is compatible, and the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#smallestScreenWidthDp">smallestScreenWidthDp</a></b> configuration field, which holds the device\'s smallestWidth value.\n
    \tFor more information about designing for different screens and using this qualifier, see the <a href="http://developer.android.com/guide/practices/screens_support.html">Supporting Multiple Screens</a> developer guide.
    </string>

    <string name="aw_description">
\tSpecifies a minimum available screen width, in <b>dp</b> units at which the resource should be used - defined by the N value.  This configuration value will change when the orientation changes between landscape and portrait to match the current actual width.\n
\tWhen your application provides multiple resource directories with different values for this configuration, the system uses the one closest to (without exceeding) the device\'s current screen width. The value here takes into account screen decorations, so if the device has some persistent UI elements on the left or right edge of the display, it uses a value for the width that is smaller than the real screen size, accounting for these UI elements and reducing the application\'s available space.\n
\tAlso see the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#screenWidthDp">screenWidthDp</a></b> configuration field, which holds the current screen width.\n
\tFor more information about designing for different screens and using this qualifier, see the <a href="http://developer.android.com/guide/practices/screens_support.html">Supporting Multiple Screens</a> developer guide.
    </string>

    <string name="ah_description">
        \tSpecifies a minimum available screen height, in "dp" units at which the resource
          should be used-defined by the N value.  This
          configuration value will change when the orientation
          changes between landscape and portrait to match the current actual height.\n
        \tWhen your application provides multiple resource directories with different values
          for this configuration, the system uses the one closest to (without exceeding)
          the device\'s current screen height.  The
          value here takes into account screen decorations, so if the device has some
          persistent UI elements on the top or bottom edge of the display, it uses
          a value for the height that is smaller than the real screen size, accounting
          for these UI elements and reducing the application\'s available space.  Screen
          decorations that are not fixed (such as a phone status bar that can be
          hidden when full screen) are <i>not</i> accounted for here, nor are
          window decorations like the title bar or action bar, so applications must be prepared to
          deal with a somewhat smaller space than they specify.\n
        \tAlso see the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#screenHeightDp">screenHeightDp</a></b>
          configuration field, which holds the current screen width.\n
        \tFor more information about designing for different screens and using this\n
qualifier, see the <a href="http://developer.android.com/guide/practices/screens_support.html">Supporting
Multiple Screens</a> developer guide.
    </string>

    <string name="size_description">
        \t<b>small</b>: Screens that are of similar size to a
        low-density QVGA screen. The minimum layout size for a small screen
        is approximately 320x426 dp units.  Examples are QVGA low-density and VGA high
        density.\n
        \t<b>normal</b>: Screens that are of similar size to a
        medium-density HVGA screen. The minimum
        layout size for a normal screen is approximately 320x470 dp units.  Examples
        of such screens a WQVGA low-density, HVGA medium-density, WVGA
        high-density.\n
        \t<b>large</b>: Screens that are of similar size to a
        medium-density VGA screen.
        The minimum layout size for a large screen is approximately 480x640 dp units.
        Examples are VGA and WVGA medium-density screens.\n
        \t<b>xlarge</b>: Screens that are considerably larger than the traditional
        medium-density HVGA screen. The minimum layout size for an xlarge screen
        is approximately 720x960 dp units.  In most cases, devices with extra-large
        screens would be too large to carry in a pocket and would most likely
        be tablet-style devices.\n
        \tSee <a href="http://developer.android.com/guide/practices/screens_support.html">Supporting Multiple Screens</a> for more information.\n
        \tAlso see the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#screenLayout">screenLayout</a></b> configuration field, which indicates whether the screen is small, normal, or large.
    </string>

    <string name="aspect_description">
        \t<b>long</b>: Long screens, such as WQVGA, WVGA, FWVGA\n
        \t<b>notlong</b>: Not long screens, such as QVGA, HVGA, and VGA\n
        \tThis is based purely on the aspect ratio of the screen (a "long" screen is wider). This
is not related to the screen orientation.\n
        \tAlso see the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#screenLayout">screenLayout</a></b> configuration field,
which indicates whether the screen is long.
    </string>

    <string name="orientation_description">
        \t<b>port</b>: Device is in portrait orientation (vertical)\n
        \t<b>land</b>: Device is in landscape orientation (horizontal)\n
        \tAlso see the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#orientation">orientation</a></b> configuration field,
which indicates the current device orientation.
    </string>

    <string name="ui_mode_description">
          \t<b>car</b>: Device is displaying in a car dock\n
          \t<b>desk</b>: Device is displaying in a desk dock\n
          \t<b>television</b>: Device is displaying on a television, providing
          a "ten foot" experience where its UI is on a large screen that the
          user is far away from, primarily oriented around DPAD or other
          non-pointer interaction <i>(added in API 13)</i>\n
          \t<b>appliance</b>: Device is serving as an appliance, with no display\n
          \t<b>watch</b>: Device has a display and is worn on the wrist <i>(added in API 20)</i>\n
        \tFor information about how your app can respond when the device is inserted into or
        removed from a dock, read <a href="http://developer.android.com/training/monitoring-device-state/docking-monitoring.html">Determining and Monitoring the Docking State and Type</a>.
    </string>

    <string name="night_mode_description">
          \t<b>night</b>: Night time\n
          \t<b>notnight</b>: Day time
    </string>

    <string name="dpi_description">
          \t<b>ldpi</b>: Low-density screens; approximately 120dpi.\n
          \t<b>mdpi</b>: Medium-density (on traditional HVGA) screens; approximately160dpi.\n
          \t<b>hdpi</b>: High-density screens; approximately 240dpi.\n
          \t<b>xhdpi</b>: Extra-high-density screens; approximately 320dpi. <i>Added in APILevel 8</i>\n
          \t<b>xxhdpi</b>: Extra-extra-high-density screens; approximately 480dpi. <i>Added in APILevel 16</i>\n
          \t<b>xxxhdpi</b>: Extra-extra-extra-high-density uses (launcher icon only, see the <a href="http://developer.android.com/guide/practices/screens_support.html#xxxhdpi-note">note</a> in <i>Supporting Multiple Screens</i>); approximately 640dpi. <i>Added in API Level 18</i>\n
          \t<b>nodpi</b>: This can be used for bitmap resources that you do not want to be scaled
to match the device density.\n
          \t<b>tvdpi</b>: Screens somewhere between mdpi and hdpi; approximately 213dpi. This is
not considered a "primary" density group. It is mostly intended for televisions and most
apps shouldn\'t need it-providing mdpi and hdpi resources is sufficient for most apps and
the system will scale them as appropriate. This qualifier was introduced with API level 13.\n
        \tThere is a 3:4:6:8:12:16 scaling ratio between the six primary densities (ignoring the
tvdpi density). So, a 9x9 bitmap in ldpi is 12x12 in mdpi, 18x18 in hdpi, 24x24 in xhdpi and so on.\n
        \tIf you decide that your image resources don\'t look good enough on a television or
other certain devices and want to try tvdpi resources, the scaling factor is 1.33*mdpi. For
example, a 100px x 100px image for mdpi screens should be 133px x 133px for tvdpi.\n
        \tSee <a href="http://developer.android.com/guide/practices/screens_support.html">Supporting Multiple
Screens</a> for more information about how to handle different screen densities and how Android
might scale your bitmaps to fit the current density.
    </string>

    <string name="touchscreen_type_description">
          \t<b>notouch</b>: Device does not have a touchscreen.\n
          \t<b>finger</b>: Device has a touchscreen that is intended to
          be used through direction interaction of the user\'s finger.\n
        \tAlso see the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#touchscreen">touchscreen</a></b> configuration field,
which indicates the type of touchscreen on the device.
    </string>

    <string name="keyboard_description">
          \t<b>keysexposed</b>: Device has a keyboard available. If the device has a
software keyboard enabled (which is likely), this may be used even when the hardware keyboard is
<i>not</i> exposed to the user, even if the device has no hardware keyboard. If no software
keyboard is provided or it\'s disabled, then this is only used when a hardware keyboard is
exposed.\n
          \t<b>keyshidden</b>: Device has a hardware keyboard available but it is
hidden <i>and</i> the device does <i>not</i> have a software keyboard enabled.\n
          \t<b>keyssoft</b>: Device has a software keyboard enabled, whether it\'s
visible or not.\n
        \tIf you provide <b>keysexposed</b> resources, but not <b>keyssoft</b>
resources, the system uses the <b>keysexposed</b> resources regardless of whether a
keyboard is visible, as long as the system has a software keyboard enabled.\n
        \tAlso see the configuration fields <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#hardKeyboardHidden">hardKeyboardHidden</a></b> and <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#keyboardHidden">keyboardHidden</a></b>, which indicate the visibility of a hardware
keyboard and and the visibility of any kind of keyboard (including software), respectively.
    </string>

    <string name="text_input_description">
          \t<b>nokeys</b>: Device has no hardware keys for text input.\n
          \t<b>qwerty</b>: Device has a hardware qwerty keyboard, whether it\'s visible to the user or not.\n
          \t<b>12key</b>: Device has a hardware 12-key keyboard, whether it\'s visible to the user or not.\n
        \tAlso see the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#keyboard">keyboard</a></b> configuration field, which indicates the primary text input method available.
    </string>

    <string name="navigation_description">
        \t<b>navexposed</b>: Navigation keys are available to the user.\n
        \t<b>navhidden</b>: Navigation keys are not available (such as behind a closed lid).\n
        \tAlso see the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#navigationHidden">navigationHidden</a></b> configuration
field, which indicates whether navigation keys are hidden.
    </string>

    <string name="non_touch_navigation_description">
        \t<b>nonav</b>: Device has no navigation facility other than using the touchscreen.\n
        \t<b>dpad</b>: Device has a directional-pad (d-pad) for navigation.\n
        \t<b>trackball</b>: Device has a trackball for navigation.\n
        \t<b>wheel</b>: Device has a directional wheel(s) for navigation (uncommon).\n
        \tAlso see the <b><a href="http://developer.android.com/reference/android/content/res/Configuration.html#navigation">navigation</a></b> configuration field, which indicates the type of navigation method available.
    </string>

    <string name="api_level_description">
        \tThe API level supported by the device. For example, <b>v1</b> for API level 1 (devices with Android 1.0 or higher) and <b>v4</b> for API level 4 (devices with Android 1.6 or higher).\n
        \tSee the <a href="http://developer.android.com/guide/topics/manifest/uses-sdk-element.html#ApiLevels">Android API levels</a> document for more information about these values.
    </string>

    <string name="mcc_caution">
        This can change during the life of your application if the user inserts or removes his or her SIM card.
    </string>

    <string name="locale_caution">
        This can change during the life of your application if the user changes his or her language in the system settings.
    </string>

    <string name="ld_note">
        To enable right-to-left layout features for your app, you must set <a href="http://developer.android.com/guide/topics/manifest/application-element.html#supportsrtl"><b>supportsRtl</b></a> to <b>"true"</b> and set <a href="http://developer.android.com/guide/topics/manifest/uses-sdk-element.html#target"><b>targetSdkVersion</b></a> to 17 or higher.
    </string>

    <string name="orientation_caution">
        This can change during the life of your application if the user rotates the screen.
    </string>

    <string name="size_caution">
        If all your resources use a size qualifier that is <i>larger</i> than the current screen, the system will <strong>not</strong> use them and your application will crash at runtime (for example, if all layout resources are tagged with the <b>xlarge</b> qualifier, but the device is a normal-size screen).
    </string>

    <string name="size_note">
        Using a size qualifier does not imply that the resources are <i>only</i> for screens of that size. If you do not provide alternative resources with qualifiers that better match the current device configuration, the system may use whichever resources are the <b><a href="http://developer.android.com/guide/topics/resources/providing-resources.html#BestMatch">best match</a></b>.
    </string>

    <string name="ui_mode_caution">
        This can change during the life of your application if the user places the device in a dock. You can enable or disable some of these modes using <b><a href="http://developer.android.com/reference/android/app/UiModeManager.html">UiModeManager</a></b>.
    </string>

    <string name="night_mode_caution">
        This can change during the life of your application if night mode is left in auto mode (default), in which case the mode changes based on the time of day.  You can enable or disable this mode using <b><a href="http://developer.android.com/reference/android/app/UiModeManager.html">UiModeManager</a></b>.
    </string>

    <string name="dpi_note">
        Using a density qualifier does not imply that the resources are <i>only</i> for screens of that density. If you do not provide alternative resources with qualifiers that better match the current device configuration, the system may use whichever resources are the <a href="http://developer.android.com/guide/topics/resources/providing-resources.html#BestMatch">best match</a>.
    </string>

    <string name="keyboard_caution">
        This can change during the life of your application if the user opens a hardware keyboard.
    </string>

    <string name="navigation_caution">
        This can change during the life of your application if the user reveals the navigation keys.
    </string>

</resources>
